面向对象思想：
          面向对象是基于面向过程的编程思想
 
          面向过程：强调的是每一个功能的步骤
          面向对象：强调的是对象，然后由于对象去调用功能
 
  面向的思想特点：
       A:是一种更符合我们思考习惯的思想
       B:可以将复杂的事情简单化
       C:将我们从执行者变成了指挥者
 
 
 
 
 
  java最基本的单位是类，所以，我们在后面学习过程中，是通过类来体现现实世界事物的。
 
  类：是一组相关的属性和行为的集合
  对象：就是该事物的具体体现
 
  例：
           类：   学生
          对象：  班长
 
 
 
  类的定义：
           类是用来描述现实世界的事物的
 
 
  事物：
          属性       事物的描述信息
          行为       事物能够做什么
 
 
  类是如何和事物进行对应的呢？
           类：
               成员变量
               成员方法
 
  学生事物：
           属性：姓名，年龄。。。。
           行为：学习，吃饭。。。。
 
  学生类：
           成员变量：姓名，年龄
           成员方法：学习，吃饭
 
  成员变量：和变量得定义是一样的
           位置不同：类中，方法外
           初始化值：不需要给初始化值
 
  成员方法：和方法的定义是一样的
           去掉static关键字


使用一个类，其实就是使用该类的成员。（成员变量和成员方法）
  而我们要想使用一个类的成员，就必须首先拥有该类的对象
 
  创建对象的格式：
           类名 对象名 = new 类名（）;
 
  对象访问成员:
           成员变量：对象名.变量名
           成员方法：对象名.方法名(... )


成员变量和局部变量的区别：
           A：在类中的位置不同
               成员变量：类中，方法外
               局部变量：方法中或者方法声明上（形式参数）
           B：在内存中的位置不同
               成员变量：堆内存
               局部变量：栈内存
           C：生命周期不同
               成员变量：随着对象的创建而存在，随着对象的消失而消失
               局部变量：随着方法的调用而存在，随着方法的调用完毕而消失
           D：初始化值的问题
               成员变量：有默认值
               局部变量：没有默认值。必须先定义，赋值，最后使用



匿名对象：没有名字的对象
  匿名对象的应用场景：
       当方法只调用一次的时候可以使用匿名对象
       可以当做参数进行传递，但无法在传参之前做其他的事情
 
  注意：匿名对象可以调用成员变量并赋值，但赋值并没有意义



final：修饰符，可以用于修饰类、成员方法、成员变量
  final所修饰的类：不能被继承，不能有子类
  final所修饰的方法：不能被重写
  final所修饰的变量：不可以修改的，是常量
 
  常量：
          字面值常量：1,2,3
          自定义常量：被final所修饰的成员变量,一旦初始化则不可改变
 
  注意：自定义常量必须初始化，可以选择显示初始化或者构造初始化