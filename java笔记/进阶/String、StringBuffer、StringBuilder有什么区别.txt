1、在字符串不经常发生变化的业务场景优先使用String(代码更清晰简洁)。如常量的声明，少量的字符串操作(拼接，删除等)。

2、在单线程情况下，如有大量的字符串操作情况，应该使用StringBuilder来操作字符串。不能使用String"+"来拼接而是使用，避免产生大量无用的中间对象，耗费空间且执行效率低下（新建对象、回收对象花费大量时间）。如JSON的封装等。

3、在多线程情况下，如有大量的字符串操作情况，应该使用StringBuffer。如HTTP参数解析和封装等。


Stringbuilder:是一个可变字符串，字符串缓冲区类
 
  String和StringBuilder的区别：
       String的内容是固定的
       StringBuilder的内容是可变的、
 
  构造方法：
           StringBuilder()
 
  成员方法：
           public int capacoty():返回当前容量
           public int length():返回长度（字符数）
 
           容量：理论值
           长度：实际值
		   
	添加功能
           public StringBuilder append(任意类型): 添加数据，并返回自身对象
    反转功能
           public StringBuilder reverse()	   
		   
	StringBuilder和String的相互转换
	
	StringBuilder ------ String
					public String toString():通过toString()就可以实现StringBuilder转成String
	String ------------ StringBuilder
					Stringbuilder(String str):通过构造方法就可以实现把String转换成StringBuilder	 


String:字符串类
          由多个字符组成的一串数据
          字符串其本质就是一个字符数组
 
 
   构造方法：
           String(String original):把字符串数据封装成字符串对象
           String(char[] value):吧字符串的数据封装成字符串对象
           String(char[] value, int offset, int count):
           把字符数组中的一部分数据封装成字符串对象
 
  注意：字符串是一种比较特殊的引用数据类型，直接输出字符串对象，输出的是该对象中的数据	

通过构造方法创建的字符串对象和直接赋值方式创建的字符串对象有什么区别
 
       通过构造方法创建字符串是在堆内存
       直接赋值方式创建对象是在方法区的常量池
 
  ==:
       基本数据类型：比较的是基本数据类型的值是否相等
       引用数据类型：比较的是引用数据类型的地址值是否相等

Object：是类层次结构中的根类，所有的类都直接或者间接的继承自该类。
  如果一个方法的形式参数是Object,那么就可以传递它的任意子类对象。
 
  String类的判断功能：
           boolean equals(Object obj):比较字符串的内容是否相同
           boolean equalsIgnoreCase(String str):比较字符串的内容是否相同，忽略大小写
           boolean startsWith(String str):判断字符串对象是否以指定的str开头
           boolean endsWith(String str):判断字符串对象是否以指定的str结尾  
		   
String类的获取功能:
 
  int length()：获取字符串的长度，其实也就是字符个数
  char charAt(int index)：获取指定索引处的字符
  int indexOf(String str)：获取str在字符串对象中第一次出现的索引
  String subString(int start)：从start开始截取字符串
  String subString(int start,int end)：从start开始，到end结束截取字符串

String类的转换功能：
   char[] toCharArray():把字符串转换为字符数组
   String toLowerCase():把字符串转换为小写字符串
   String toUpperCase():把字符串转换为大写字符串
 
       字符串的遍历：
           A：length()加上charAt()
           B:把字符串转换为字符数组，然后遍历数组  
		   
去除字符串两端空格
       String trim()
  按照指定符号分割字符串
       String[] split(String str)		   