						
									IO流基础

输出流：FileWriter		写
输入流：FileReader		读

往文件中写数据
  写数据--输出流--FileWriter
 
  FileWriter:
           FileWriter(String fileName):传递一个文件名称
 
  输出流写数据的步骤：
       A:创建输出流对象
       B:调用输出流对象的写数据的方法
       C:释放资源

从文件中读数据并显示到控制台
       读数据--输出流--FileReader
 
  FileReader:
       FileReader(String fileName):传递文件名称
 
   输入流读文件的步骤：
           A:创建输入流对象
           B:调用输入流对象的读数据方法
           C:释放资源



相对路径：相对于当前项目而言的，在项目的根目录下（a.txt）
绝对路径：以盘符开始的路径（d:\\a.txt）

close()和flush()方法的区别：
       flush():刷新缓冲区，流对象还可使用
       close():先刷新缓冲区人,然后通知系统释放资源。流对象不可被使用

void write(String str):写一个字符串数据
void write(String str,int index,int len):写一个字符串中的一部分数据
void write(int ch):写一个字符数据，这里写int类型的好处是既可以写char类型的数据，也可以写char对应的int类型的值。'a' ,97
void write(char[] chs):写一个字符数组数据
void write(char[] chs,int index,int len):写一个字符数组的一部分数据


 BufferedWriter: 将文本写入字符输出流，缓冲各个字符，从而提供单个字符、数组和字符串的高效写入
 BufferedReader: 从字符输入流中读取文本，缓冲各个字符，从而提供单个字符、数组和字符串的高效读取

缓冲流的特殊功能：
  BufferedWriter
           void newLine():写一个换行符，这个换行符由系统决定
  BufferedReader
           String readLine():一次读取一行数据，但是不读取换行符
		   
		   
		   
											
											
											
											
											
											IO流进阶
											
File:文件和目录路径名的抽象表示形式 file类的实例是不可变的
 
  构造方法：
       File(File parent, String child) :从父抽象路径名和子路径名字符串创建新的 File实例。
       File(String pathname) :通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例。
       File(String parent, String child) :从父路径名字符串和子路径名字符串创建新的 File实例。
 
 
   File的常用功能：
           创建功能:
               boolean createNewFile():当且仅当具有该名称的文件尚不存在时，原子地创建一个由该抽象路径名命名的新的空文件。
               boolean mkdir() :创建由此抽象路径名命名的目录。
               boolean mkdirs() :创建由此抽象路径名命名的目录，包括任何必需但不存在的父目录。
 
           删除功能:
               boolean delete():删除由此抽象路径名表示的文件或目录。
			   
			  注意：删除一个文件夹，这个文件夹下面不能有其他的文件和文件夹
 
           获取功能:
               File getAbsoluteFile():返回此抽象路径名的绝对形式。
               String getAbsolutePath() :返回此抽象路径名的绝对路径名字符串。
               String getName() :返回由此抽象路径名表示的文件或目录的名称。
               String getParent() :返回此抽象路径名的父 null的路径名字符串，如果此路径名未命名为父目录，则返回null。
               File getParentFile() :返回此抽象路径名的父，或抽象路径名 null如果此路径名没有指定父目录。
               String getPath() :将此抽象路径名转换为路径名字符串。
               long lastModified() :返回此抽象路径名表示的文件上次修改的时间。
               long length() :返回由此抽象路径名表示的文件的长度。

           判断功能:
               boolean exists() :测试此抽象路径名表示的文件或目录是否存在。
               boolean isAbsolute() :测试这个抽象路径名是否是绝对的。
               boolean isDirectory() :测试此抽象路径名表示的文件是否为目录。
               boolean isFile() :测试此抽象路径名表示的文件是否为普通文件。
               boolean isHidden() :测试此抽象路径名命名的文件是否为隐藏文件。
 
           修改文件名:
               boolean renameTo(File dest) :重命名由此抽象路径名表示的文件。											


		绝对路径：固定不可改变的路径，以盘符开头
		相对路径：相对于某个参照物，不能以盘符开头											
		   
File类的重要获取功能:
               String[] list() :返回一个字符串数组，命名由此抽象路径名表示的目录中的文件和目录。
					注意*：只有指向文件夹的File对象才可以调用该方法
			   
               File[] listFiles() :返回一个抽象路径名数组，表示由该抽象路径名表示的目录中的文件。
               static File[] listRoots() :列出可用的文件系统根。		   
		   
IO流的分类
          流向：
                  输入流   读取数据   FileReader   Reader
                  输出流   写出数据   FileWriter   Writer
 
          数据类型
                  字节流
                          字节输入流    读取数据   InputStream
                          字节输出流    写出数据   OutputStream
                  字符流
                          字符输入流    读取数据   Reader
                          字符输出流    写出数据   Writer
						  
	二进制文件只能使用字节流进行复制（使用windows自带的记事本打开乱码的）
	文本文件的复制既可以使用字节流，也可以使用字符流					  
		
标准输入输出流：
               public static final InputStream in;字节输入流,用来读取键盘录入的数据
                   InputStream is = System.in;
                   Scanner sc = new Scanner(System.in);
               public static final PrintStream out;字节输出流，降数据输出到命令行
               System.out.println();

转换流:
	由于标准输出流是一个字节输出流，所以只能输出字节或者字节数组，但是我们读取的数据是字符串，如果想进行输出还需要转换成字节数组。
	我们要通过标准输出流输出字符串，把标准输出流转换成一种字符输出流即可
		OutputStreamWriter
 
        OutputStreamWriter(OutputStream out) :创建一个使用默认字符编码的OutputStreamWriter。

	需要把字节流转换成字符输入流。
		InputStreamReader
		
		InputStreamReader(InputStream in)	


打印流
               PrintStream
			   
               PrintWriter
                    可以自动换行 Println()
                    不能输出字节，但是可以输出其他任意类型
                    通过某些配置，可以实现自动刷新（只有在调用println,print,Format才有用）
                    也是包装流，不具备写出功能
                    可以把字节输出流转换成字符输出流
 
 注意：只能输出不能输入	



打印流的特有功能
               自动换行  使用println()实现自动换行
               自动刷新  创建PrintWriter对象时启动自动刷新开关，并且使用pringln等三个方法可以实现自动刷新
 
  注意:创建FileWriter对象时boolean参数是否追加，
      而创建打印流对象的boolean类型参数是是否自动刷新 