内部类

	成员内部类
	局部内部类
	匿名内部类
	
共性：
	-内部类仍然是一个独立的类，在编译之后内部类会被编译成独立的.class文件，但是前面冠以外部类的类名和$符号
	-内部类不能用普通的方式访问。内部类是外部类的一个成员，因此内部类可以自由地访问外部类的成员变量，无论是否是private的。

匿名内部类的应用场景：
           作为参数进行传递

成员内部类：
          在类的成员位置，和成员变量以及成员方法所在的位置是一样的
          在内部类当中可一直直接访问外部类的成员，包括私有的

成员内部类的修饰符：
           可以使用权限修饰符修饰成员内部类，但是如果使用私有来修饰，则无法在其他类中访问
           可以使用static修饰成员内部类，不用再创建外部类的对象了
 
           可以使用abstract,final修饰成员

局部内部类
          在方法内,出了方法之后就无法使用

匿名内部类：
           可以把匿名内部类看成是一个没有名字的局部内部类
           定义在方法当中
           必须在定义匿名内部类的时候创建他的对象

  格式：
       new 类/接口（）{
           如果是创建了继承这个类的子类对象，我们可以重写父类的方法
           如果是创建了实现这个接口的子类对象，我们必须要实现该接口的所有方法
       }；
  原理：创建了继承这个类的子类对象或者是创建了实现这个接口的子类对象