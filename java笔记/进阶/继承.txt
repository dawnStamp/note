继承:多个类有共同的成员变量和成员方法，抽取到另外一个类中(父类)，在让多个类去继承这个父类，我们的多个类可以获取到父类中的成员。

 extends
 
java继承的特点：
              java语言只支持单一继承，只能继承一个父类（一个儿子只能有一个亲爹）
              java语言支持多层继承（一个儿子可以有一个亲爹，还可以有一个亲爷爷）

继承中的成员变量的特点
           子类只能获取父类非私有成员
           子父类中成员变量的名字不一样时，直接获取父类的成员变量
           子父类中成员变量名字是一样的，获取的是子类的成员变量
 
  就近原则：谁离我近 我用谁
           如果有局部变量就使用局部变量
           如果没有局部变量，有子类的成员变量就使用子类的成员变量
           如果没有局部变量和子类的成员变量，有父类的成员变量就使用父类的成员变量
           啥都没有，就是出错
 
 
  super:可以获取父类的成员变量和成员方法,用法和this相同
  
  
继承中成员方法的特点
           子类中没有这个方法，调用父类的
           子类中重写了这个方法，调用子类的
 
  方法重写：在子父类中，子类的方法和父类的方法完全一样，子类重写了父类的方法（覆盖），当子类重写了父类的方法之后，使用子类对象调用的就是子类的方法
  方法重载：在一个类中，有多个重名的方法，但是参数不一样（参数个数，参数类型，参数的顺序），和返回值无关
  
方法重写的应用场景：当父类的方法不能完全满足子类使用，这个时候子类重写父类的方法，
                   并可以在方法中使用关键字super调用父类的方法，这样做既可以保有父类的功能，也可以拥有子类的特有功能
  方法重写的注意事项：
                   不能重写父类私有的方法
                   权限必须大于等于父类方法的权限
 
 
  注解:@
      加上@Override这个，就是子类重写父类的方法

继承中构造方法的执行顺序
           在有子父类继承关系的类中，创建子类的对象，调用子类的构造方法，如果子类构造方法的第一行代码没有调用父类的构造方法，
           则会默认的调用父类的无参构造方法
           肯定会先执行父类的构造，因为要先给父类的成员变量进行初始化，子类可能会使用到
 
  我们可以使用super()在子类构造方法的第一行中调用父类的构造方法

this和super的区别
           this:当前对象的引用
           调用子类的成员变量
           调用子类的成员方法
           在子类的构造方法第一行调用子类其他构造方法
           super:子类对象的父类引用
           调用父类的成员变量
           调用父类的成员方法
           在子类的构造方法第一行调用父类的构造方法

继承的优缺点：
	优点：-提高了代码的复用性
 	          -提高了代码的可维护性
	缺点：
	          -类的耦合性增强了
			  -开发的原则，高内聚低耦合
			  -内聚：就是自己完成某件事情的能力
			  -耦合：类与类之间的关系
		
		

