变量：
	值可以进行改变，即为变量
	1.局部变量
		(1)局部变量声明在方法内
		(2)局部变量只能在它声明的那个方法中可以使用
		(3)访问修饰符不能用于局部变量

	2.实例变量
		(1)必须写在类里面，并且独立于所有方法外面
		(2)可以使用访问修饰符
		(3)实例变量可以直接通过变量名来访问，但是在静态方法中以及其他类中，不可以直接通过变量名访问
		(4)一般实例变量会用private修饰

	3.静态变量
		(1)以static修饰，必须写在类里面，并且独立于所有方法外面
		(2)静态变量除了用于声明常量外，很少用到
		(3)一般来说：final static 配合使用，来声明静态常量
		(4)可以直接通过变量名来访问

常量：
	值被设置后，不可以进行改变，即为常量
	常量前面需要用final进行修饰


声明变量：
	数据类型 变量名;

声明变量并存入值：	
	数据类型 变量名=值;

先声明变量，后存入值：
	数据类型 变量名;
	变量名=值;

声明变量并存入值：
	数据类型 变量名1=值1,变量名2=值2;

修改变量的值：
	变量名 = 需要存入的值;



注释
	//	单行文本注释

	/*
		多行文本注释
	*/

       /**
	*	文本域注释
	*/

数据类型：
	java语言中定义了8种基本数据类型，分为了4大类：
		1.整数类型
		2.浮点类型
		3.字符类型
		4.布尔类型

			整数型：默认值为0
				byte		字节型
					java中最小的数据类型
					内存中占用8个bit(1字节)
					取值范围为：-128~127
					

				short		短整型
					在内存中占用16个bit(2字节)
					取值范围为：-2^15 ~ 2^15-1

				int		整型
					在内存中占用32个bit(4字节)
					取值范围：-2^31 ~ 2^31-1

				long		长整型
					在内存中占用64个bit(8个字节)
					取值范围：-2^63 ~ 2^63-1

			浮点类型：
				float		单精度浮点型
					在内存中占用4字节
					默认值0.0f

				double		双精度浮点型
					在内存中占用8字节
					默认值0.0d
			
				double比float的存储范围更大，精度更高

			字符类型：
				char
					2个字节
					默认空 null
					0 ~ 2^16-1
					值写在单引号内，只能输入一个字符

			布尔类型：
				boolean
					1个字节
					用于逻辑判断
					值只能为true false
					默认值false
			
数据类型的转换：
	byte、char、short -> int -> long -> float -> double

	1.自动数据类型转换(自动转换)
		按照上面的优先级，小转大，会自动进行转换，直接将值赋给需要转成类型的变量，即可。

	2.强制类型转换(强转)（慎用）
		大转小时，需要强制转换
		容易引起数据丢失

	3.表达式类型的自动提升
		当一个算术表达式包含多个基本类型的值时，整个算术表达式的数据类型将发生自动提升
		自动提升到表达式中的最高等级的类型同样的类型