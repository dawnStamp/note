数组
	一维数组：
		概念:同一种数据类型的数据的集合，其实数组就是一种容器。
		
		1.存储相同数据类型的一组数据
		2.对同类型数据集中存储、管理，便于使用
		3.数组会自动给元素排序，从0开始编号
		4.数组的类型就是数组内元素的类型
		5.数组本身是一种引用数据类型
		6.数组中所有的元素在内存中连续存储
		
	数组的声明：
		告诉系统数据类型是什么
		数据类型[] 数组名;
		
		int[] a;
		
	创建数组：
		为数组分配内存空间
		使用new关键字
			数组名 = new 数据类型[];
			a = new int[];
	
	初始化数组：
		静态初始化(边声明边赋值)
			1.数据类型[] 数组名 = new 数据类型[]{32,535,97,24};
			2.隐式初始化：
				数据类型[] 数组名 = {32,535,97,24};
				
		动态初始化(声明创建完成后再赋值)
			数据类型[] 数组名 = new 数据类型[元素的个数/数组的长度];
			
	数组的长度
		获取数组的长度
		语法：
			数组名.length
			
	练习题1：
		将数组中的全部元素都打印出来
	
	练习题2：
		求数组中所有元素的和
		
	排序
		冒泡排序
			是一种简单的排序算法，它重复的走访要排列的元素，一次比较两个元素，如果他们的顺序错误，就交换他们的位置，重复的进行，直到没有再需要交换的为止，数组即已排序完成
			
		选择排序
			首先在未排序的数组中找到最小元素存放到数组的起始位置，然后再从剩余未排序的元素中继续寻找最小元素。
			以此类推，直到所有元素排序完毕
			
		插入排序
			它是通过构建有序数组，对于未排序数据，在已排序数据中从后向前扫描，找到相应位置并插入，从后向前扫描的过程中，需要反复把已排序的元素逐步向后挪位，为最新的元素提供插入空间
	
	查找
		线性查找法
			又称之为顺序查找法，在一列给定的值中进行搜索，从一端开始，到另一端结束，逐一检查每一个元素，直到找到需要的元素为止

		二分查找法
			又称折半查找法，它是一种效率较高的查找法。
			将数组按有序化排列，查找过程中采用跳跃的方式进行查找，即先以有序数组的中点位置为比较对象，如果要找的元素值小于该中点元素，则将待查数组缩小为左半部分，否则为右半部分
	
			{1,4,7,			9,			12,14,17}

			前半区最大于下标变了 终点的下标-1


			求中点的下标：
				int mm = (MIN+MAX)/2
				(0+(mm-1))/2			前半段中点
				((mm+1)+length-1)/2		后半段中点
				
				一个循环  while 
	
		交换：	
			int temp = a[0];
			a[0] = a[1];
			a[1] = temp;
		
		作业：
			用控制台输入学生成绩，保存到数组中
			求学生的总成绩、平均分、最高分、最低分
		
	遍历：
		1.for循环
			获取数组中的所有元素，便于使用
		
		2.foreach循环
			后期新加的一种循环，一般用于遍历
			遍历数组，相对于for循环遍历来说，更加简洁、方便。
			基本结构：
				for(数据类型 变量名:需要遍历的数组名){
				
				}
				:前面声明的变量，是用来接收数组遍历出来的结果
				
		区别：
			1.foreach循环适用于条件比较简单的情况下进行遍历
			  for循环适用于条件相对复杂的情况下进行遍历
			  
			2.foreach循环写法相对简单好理解,但功能也相对简单
			  for循环条件、参数等相对较多，虽然复杂，但功能更加强大
			  
			3.需要向数组内存值的情况下，不适合使用foreach循环，foreach循环只适合取值时使用，即只适合用来遍历数组
			
	二维数组
		声明：
			int[][] i;
		创建：
			i=new int[][];
		初始化：
			int[][] i=new int[][]{};
			int[][] i ={};
			int[][] i = new int[3][3];