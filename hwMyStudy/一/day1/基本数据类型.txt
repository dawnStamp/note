数据类型：
	java语言中定义了8种基本数据类型，分为了四大类：
		1.整数类型
		2.浮点类型
		3.字符类型	
		4.布尔型

		整数型：
			byte	字节型
				java中最小的数据类型
				内存中占用8个bit(1字节)
				取值范围为：-128~127
				默认值为0

			short	短整型
				内存中占用16个bit(2字节)
				取值范围：-2^15 ~ 2^15-1
				默认值为0

			int	整型
				内存中占用32bit(4字节)
				取值范围：-2^31 ~ 2^31-1
				默认值为0

			long	长整型
				内存中占用64bit(8字节)
				取值范围：-2^63 ~ 2^63-1
			
		浮点型：
			float 	单精度浮点型
				内存中占用4个字节
				默认值为0.0

			double	双精度浮点型
				内存中占用8个字节
				默认值为0.0

			double比float的存储范围更大，精度更高。
			
		字符型：
			char
				内存中占用2个字节
				默认为空 null
				取值范围：0 ~ 2^15-1
				值写在单引号内，只能输入一个字符
		
		布尔型：
			boolean
				内存中占用1个字节
				用于逻辑判断
				值只能为true false
				默认值为false

声明变量的几种方式：
	1.声明变量并存入值
		数据类型 变量名 = 值;
	
	2.先声明变量，后存入值
		数据类型 变量名;
		变量名 = 值;

	3.声明变量并存入值
		数据类型 变量名1 = 值1，变量名2 = 值2 ...

修改变量的值：
	变量名 = 值；

变量：
	值可以进行改变，即为变量
	1.静态变量
		(1)静态变量也称为类变量，在类中以static关键字声明，必须写在类里面，必须独立于所有方法外面。
		(2)静态变量除了用于声明常量外，很少用到。
		(3)一般来说：final static 配合使用，来声明常量。
		(4)可以直接通过变量名访问

	2.实例变量
		(1)必须写在类里面，并且独立于所有方法外面
		(2)可以使用访问修饰符修饰
		(3)实例变量可以直接通过变量名来访问，但是在静态方法中及其他类中，不可以直接通过变量名访问。
		(4)一般实例变量会用private修饰
	
	3.局部变量
		(1)局部变量声明在方法内
		(2)局部变量只能在它声明的那个方法中使用
		(3)访问修饰符不能用于局部变量
		
常量：
	值不可被改变的为常量
	使用final修饰，写在方法外

数据类型的转换：
	byte、char、short -> int -> long -> float -> double
	1.自动数据类型转换(自动转换)
		按照上面的优先级，小转大，会自动进行转换，直接将值赋给需要转成类型的变量即可。
	
	2.强制数据类型转换(强转)
		大转小时，需要强制转换
		
	3.表达式类型的自动提升
		当一个算术表达式包含多个基本类型的值时，整个算数表达式的数据类型将发生自动提升，自动提升到表达式中的最高等级的类型同样的类型。

		short byte char int 同时运算
		double int byte     同时运算